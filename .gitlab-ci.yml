include:
    project: "exposed/template_ci"
    file: "/python-package.yml"

stages:
    - build-and-deploy-docker-test-image
    - cppcheck
    - MR-master-staging
    - make-tag
    - build-and-deploy-docker-image
    - build-and-deploy-package
    - release
    - MR-staging-production
    - MR-production-staging

build-and-deploy-docker-test-image:
    extends: .build-and-deploy-docker-image-base
    stage: build-and-deploy-docker-test-image
    variables:
        PATH_DOCKER_FILE: ${CI_PROJECT_DIR}/docker/Dockerfile
        PATH_CONTEXT: ${CI_PROJECT_DIR}/docker
        BUILD_TEST: "true"
    only:
        - branches
    except:
        - tags
        - production
        - staging

cppcheck:
    image: $CI_REGISTRY_IMAGE:test
    artifacts:
        paths:
            - "cppcheck-result.xml"
    stage: cppcheck
    script:
        - cppcheck -i/pugixml.cpp --language=c++ --enable=all --xml --xml-version=2 parsing 2> cppcheck-result.xml
    only:
        - branches
    except:
        - tags
        - production
        - staging

MR-master-staging:
    extends: .pull-master-into-staging-base
    stage: MR-master-staging

make-tag:
    extends: .make-tag-base
    stage: make-tag

release:
    extends: .release-base
    stage: release

build-and-deploy-docker-image:
    extends: .build-and-deploy-docker-image-base
    stage: build-and-deploy-docker-image
    variables:
        PATH_DOCKER_FILE: ${CI_PROJECT_DIR}/docker/Dockerfile
        PATH_CONTEXT: ${CI_PROJECT_DIR}/docker

build-package:
    extends: .build-and-deploy-package
    stage: build-and-deploy-package
    variables:
        BUILD_CMD: CFLAGS="-Wno-everything" python3 setup.py install_library build_ext sdist bdist_wheel

MR-staging-production:
    #    extends: .MR-staging-production-base
    extends: .pull-staging-into-production-base
    stage: MR-staging-production

MR-production-staging:
    #    extends: .MR-production-staging-base
    extends: .pull-production-into-staging-base
    stage: MR-production-staging
