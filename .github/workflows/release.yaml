name: Release

on: 
  push:
    branches: [ dev, master ]

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
      new_version: ${{ steps.tag.outputs.new_version }}
      changelog: ${{ steps.tag.outputs.changelog }}
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}


  deploy-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - tag
    outputs:
      image: ${{ steps.image_registry_lower.outputs.lowercase}}
      branch: ${{ steps.branch.outputs.name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Get branch name
        id: branch
        run: echo ::set-output name=name::${GITHUB_REF#refs/*/}

      - id: image_registry_lower
        uses: ASzc/change-string-case-action@v2
        with:
          string: ghcr.io/${{ github.repository }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker-container
          driver-opts: |
            image=moby/buildkit:master
            network=host
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
        with:
          images: ${{ steps.image_registry_lower.outputs.lowercase }}
          tags: |
            type=semver, pattern={{raw}}, value=${{needs.tag.outputs.new_tag}}
            type=ref, event=branch
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        id: build
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: docker/Dockerfile
          cache-from: type=registry,ref=${{ steps.image_registry_lower.outputs.lowercase }}:buildcache-${{ steps.branch.outputs.name}}
          cache-to: type=registry,ref=${{ steps.image_registry_lower.outputs.lowercase }}:buildcache-${{ steps.branch.outputs.name}},mode=max

  build: 
    needs: [ tag, deploy-docker] 
    container: 
      image: ${{ needs.deploy-docker.outputs.image }}:${{ needs.deploy-docker.outputs.branch }}
      credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set version
      run: |
        echo "LIB_VERSION=${{ needs.tag.outputs.new_version }}" >> $GITHUB_ENV
    - name: Change Log
      run: |
        echo '${{ needs.tag.outputs.changelog }}' | cat - docs/versions.md > temp && mv temp docs/versions.md
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip

    - name: setup conan profile
      run: |
        conan install . && conan profile update settings.compiler.libcxx=libstdc++11 default && conan install . --build=missing

    - name: Build packages
      run: |
        pip install -U twine wheel
        CFLAGS="-Wno-everything" python3 setup.py install_library build_ext sdist bdist_wheel
        twine check dist/*
    - name: Upload packages
      uses: actions/upload-artifact@v2
      with:
        name: parsing
        path: dist/*