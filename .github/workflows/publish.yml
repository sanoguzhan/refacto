# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Publish Python Package

on:
    push:
        branches: [ staging, production ]

jobs:
    tag:
        runs-on: ubuntu-latest
        outputs:
            new_tag: ${{ steps.tag_version.outputs.new_tag }}
            new_version: ${{ steps.tag_version.outputs.new_version }}
            changelog: ${{ steps.tag_version.outputs.changelog }}
        steps:
            -   uses: actions/checkout@v2
            -   name: Bump version and push tag
                id: tag_version
                uses: mathieudutour/github-tag-action@v6.0
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    release_branches: production
                    pre_release_branches: staging
    build:
        runs-on: ubuntu-latest
        needs:
            - tag
        container:
            image: ghcr.io/feedgy/refacto:master
            credentials:
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            BUILD_VERSION: ${{ needs.tag.outputs.new_tag }}
        steps:
            -   uses: actions/checkout@v2
            -   name: Build package
                run: |
                    export LIB_VERSION=${{ needs.tag.outputs.new_tag }}
                    CFLAGS="-Wno-everything" python3 setup.py install_library build_ext sdist
                    python3 check_ext dist/*
            -   uses: actions/upload-artifact@v2
                with:
                    name: 'dist-result'
                    path: dist/
                    retention-days: 1
    publish-on-code-artifact:
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            -   uses: actions/download-artifact@v2
                with:
                    name: 'dist-result'
                    path: dist/
            -   uses: actions/checkout@v2
            -   name: Install Twine
                run: |
                    pip install twine
            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v1
                with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: eu-west-3
            -   name: publish in Code Artifact
                run: |
                    export TWINE_USERNAME=aws
                    export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain feedgy --domain-owner 687044813332 --query authorizationToken --output text`
                    export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain feedgy --domain-owner 687044813332 --repository feedgy-ref --format pypi --query repositoryEndpoint --output text`
                    export LIB_VERSION=${{ needs.tag.outputs.new_tag }}
                    twine upload dist/*